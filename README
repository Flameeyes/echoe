
echoe

Echoe is a simple tool for working with Rubygems. It generates Rake tasks for documentation, testing, packaging, and deployment.

== License

Copyright 2007 Cloudburst, LLC. See the included LICENSE file. Portions copyright 2006 Ryan Davis/Zen Spider Software and used with permission. See the included MIT-LICENSE file.

== Features

* simple configuration
* comprehensive gem deployment
* automatic changeset parsing
* documentation upload to any host

= Usage

== Installation

  sudo gem install echoe

== Project configuration

Organize your gem according to the usual structure:

  lib/
  bin/  
  ext/
  README
  LICENSE
  CHANGELOG
  Rakefile

Your <tt>CHANGELOG</tt> should be formatted as follows (including newlines):

  v2.1. newest change
  
  v2. older change
  
  v1.9. oldest change
  
This way Echoe can parse the latest version and changeset message automatically.

Your <tt>Rakefile</tt> needs the following minimal contents:

  require 'rubygems'
  require 'echoe'  
  Echoe.new('gem_name')
  
More advanced configuration is described in the Echoe class.

== Deploying your gem

First, run <tt>rubyforge setup</tt> and <tt>rubyforge config</tt> if you haven't already. Make sure your Rubyforge password is correctly set.

Now, to deploy the gem and documentation:

  rake manifest
  rake release
  rake publish_docs

Once you've built your manifest, you only need to rebuild it if you add or remove files from the package structure.

= Extras

== All Rake tasks

The following tasks are made available to your gem.

Packaging:

* <tt>manifest</tt> -  Build a manifest list.
* <tt>docs</tt> -  Build the documentation.
* <tt>package</tt> -  Build all the packages.

Testing:

* <tt>test</tt> -  Run the test suite.
* <tt>install</tt> -  Install the gem locally.
* <tt>uninstall</tt> -  Uninstall the gem.

Upload:

* <tt>publish_docs</tt> -  Publish documentation to the web.
* <tt>release</tt> -  Package and upload the latest release to Rubyforge.

Cleaning:

* <tt>clean</tt> -  Delete all the generated documentation and packages.
* <tt>redocs</tt> -  Force a rebuild of the Rdoc files.
* <tt>repackage</tt> -  Force a rebuild of the package files.

== Further resources

* http://blog.evanweaver.com/pages/code#echoe
* http://rubyforge.org/forum/forum.php?forum_id=13986
